<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>AI Recipe Search - AI Recipe Recommender</title>
  <link
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <link 
    rel="stylesheet" 
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
  />
  <style>
    body, html {
      margin: 0; padding: 0; height: 100%; font-family: 'Arial', sans-serif;
      background-color: #212529; color: #f8f9fa;
    }
    .navbar-brand span { color: #ffc107; }
    .navbar { border: none !important; box-shadow: none !important; background-color: #343a40 !important; }
    .search-container { padding-top: 80px; padding-bottom: 60px; text-align: center; }
    .search-container h1 { font-weight: bold; color: #fff; }
    .search-container h1 span { color: #ffc107; }
    .search-container p { color: #adb5bd; max-width: 600px; margin: 15px auto 30px; }
    .search-form { display: flex; justify-content: center; max-width: 700px; margin: 0 auto;
      border: 1px solid #495057; border-radius: 50px; background-color: #343a40; padding: 8px;
    }
    .search-form .form-control { background-color: transparent; border: none; color: #fff; font-size: 1.1rem; }
    .search-form .form-control:focus { box-shadow: none; background-color: transparent; }
    .search-form .btn { border-radius: 50px; font-weight: bold; padding: 0 30px;
      background-color: #ffc107; border-color: #ffc107; color: #212529;
    }
    .search-form .btn:hover { background-color: #e0a800; border-color: #e0a800; }
    .results-section { padding-bottom: 80px; }
    .recipe-card { background-color: #343a40; border: none; border-radius: 15px; overflow: hidden;
      margin-bottom: 30px; transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .recipe-card:hover { transform: translateY(-10px); box-shadow: 0 15px 30px rgba(0,0,0,0.3); }
    .recipe-card .card-img-top { height: 200px; object-fit: cover; }
    .recipe-card .card-body { color: #f8f9fa; }
    .recipe-card .card-title { color: #ffc107; }
    .recipe-card .btn-outline-warning { border-radius: 20px; }
    .placeholder-text, .loading-spinner { color: #6c757d; font-style: italic; text-align: center; width: 100%; }
  </style>
</head>
<body>

  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
     <a class="navbar-brand" href="index.html">AI Recipe <span>Recommender</span></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item"><a class="nav-link" href="index.html">Home</a></li>
        <li class="nav-item"><a class="nav-link" href="memu.html">view Menu</a></li>
        <li class="nav-item"><a class="nav-link" href="feedback.html">Feedback</a></li>
        <li class="nav-item"><a class="nav-link" href="login.html">Login</a></li>
        <li class="nav-item"><a class="nav-link" href="about.html">About</a></li>
        <li class="nav-item"><a class="nav-link" href="contact.html">Contact</a></li>
      </ul>
    </div>
  </nav>

  <!-- AI Search Section -->
  <section class="search-container">
    <div class="container">
      <h1>AI Powered <span>Recipe Search</span></h1>
      <p>Enter an ingredient (e.g., "chicken", "tomato") or a dish you're craving to get started!</p>
      
      <!-- Added an ID to the form for easy selection in JavaScript -->
      <form class="search-form" id="ai-search-form">
        <input type="text" class="form-control" id="search-input" placeholder="What should I cook today?" required>
        <button type="submit" class="btn btn-warning">
          <i class="fas fa-search"></i> Search
        </button>
      </form>
    </div>
  </section>
  
  <!-- Recipe Results Section -->
  <section class="results-section">
    <div class="container">
      <div class="row" id="results-row">
        <!-- Results will be dynamically inserted here -->
        <div class="col-12">
            <h3 class="placeholder-text">Your recipe recommendations will appear here...</h3>
        </div>
      </div>
    </div>
  </section>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

  <!-- NEW JAVASCRIPT FOR BACKEND COMMUNICATION -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const searchForm = document.getElementById('ai-search-form');
      const searchInput = document.getElementById('search-input');
      const resultsRow = document.getElementById('results-row');
      
      // Listen for the form submission
      searchForm.addEventListener('submit', async (event) => {
        // 1. Prevent the default form behavior (which reloads the page)
        event.preventDefault(); 
        
        const query = searchInput.value.trim();
        if (!query) return; // Do nothing if the input is empty

        // 2. Show a loading indicator
        resultsRow.innerHTML = `<div class="loading-spinner"><h3><i class="fas fa-spinner fa-spin"></i> Searching for recipes...</h3></div>`;
        
        try {
          // 3. Send the search query to our backend server using the Fetch API
          // This sends a GET request to http://localhost:3000/api/search?q=...
          const response = await fetch(`http://localhost:3000/api/search?q=${encodeURIComponent(query)}`);
          
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          
          const recipes = await response.json(); // 4. Parse the JSON response from the server
          
          // 5. Display the results
          displayRecipes(recipes);

        } catch (error) {
          console.error('Error fetching data:', error);
          resultsRow.innerHTML = `<div class="placeholder-text text-danger"><h3>Failed to fetch recipes. Please try again later.</h3></div>`;
        }
      });
      
      // Function to render the recipes on the page
      function displayRecipes(recipes) {
        // Clear previous results or loading indicator
        resultsRow.innerHTML = ''; 
        
        if (recipes.length === 0) {
          resultsRow.innerHTML = `<div class="placeholder-text"><h3>Sorry, no recipes found. Try a different search!</h3></div>`;
          return;
        }
        
        // Loop through each recipe and create an HTML card for it
        recipes.forEach(recipe => {
          const recipeCard = `
            <div class="col-md-6 col-lg-4">
                <div class="recipe-card">
                    <img src="${recipe.image}" class="card-img-top" alt="${recipe.title}">
                    <div class="card-body">
                        <h5 class="card-title">${recipe.title}</h5>
                        <p class="card-text">${recipe.description}</p>
                        <a href="#" class="btn btn-outline-warning">View Recipe</a>
                    </div>
                </div>
            </div>
          `;
          resultsRow.innerHTML += recipeCard; // Add the new card to the results row
        });
      }
    });
  </script>

</body>
</html>
