<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>My Recipe Search Engine</title>
  <link
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <style>
    body, html {
      margin: 0; padding: 0; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; color: white; overflow-x: hidden;
    }
    body {
        background: 
            linear-gradient(rgba(20, 15, 10, 0.85), rgba(20, 15, 10, 0.85)),
            url('https://images.unsplash.com/photo-1495195129352-9eb3b5e2075b?auto=format&fit=crop&w=1740&q=80')
            no-repeat center center fixed;
        background-size: cover;
    }
    .navbar-brand span { color: #ff8c00; } /* Warm Orange for food theme */
    .content-wrapper { padding: 40px 15px; }
    h1, h2 { font-weight: 600; }
    .lead { font-size: 1.25rem; font-weight: 300; }
    label, button { cursor: pointer; }
    .filter-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 15px; }
    #time-value { color: #ff8c00; font-weight: bold; font-size: 1.1rem; }
    
    /* Card Styles */
    .recipe-card {
        background: rgba(40, 30, 20, 0.7);
        border: 1px solid #5a4a3a;
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        display: flex; flex-direction: column; cursor: pointer;
    }
    .recipe-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 30px rgba(255, 140, 0, 0.3);
        border-color: #ff8c00;
    }
    .card-img-top { height: 200px; object-fit: cover; }
    .btn-primary { background-color: #ff8c00; border: none; }
    .btn-primary:hover { background-color: #e07b00; }

    /* Modal Styles */
    .modal-content { background-color: #2c1d10; color: white; border: 1px solid #ff8c00; }
    .modal-header, .modal-footer { border-color: #5a4a3a; }
    .modal-body h5 { color: #ff8c00; }
    #modal-recipe-procedure { list-style-position: inside; padding-left: 0; }
  </style>
</head>
<body>

  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand" href="#">My Recipe <span>Finder</span></a>
  </nav>

  <div class="content-wrapper">
    <div class="container">

      <!-- FORM CONTAINER -->
      <div id="form-container" class="text-center">
        <h1>Find Your Perfect Meal</h1>
        <p class="lead text-muted mb-5">Search your personal collection to find the right recipe for any occasion.</p>
        
        <form id="recipe-form">
          <!-- Main Search Input -->
          <div class="form-section text-left mb-4">
            <label for="search-input" class="h2">1. What are you craving?</label>
            <input type="search" id="search-input" class="form-control form-control-lg" placeholder="e.g., 'chicken pasta', 'spicy curry', 'chocolate cake'">
          </div>

          <!-- Filters -->
          <div class="row text-left">
            <div class="col-lg-8">
                <div class="row">
                    <div class="col-md-6 mb-4">
                        <h2>2. Cuisine</h2>
                        <div class="p-3 bg-dark rounded filter-grid" id="cuisines-grid"></div>
                    </div>
                    <div class="col-md-6 mb-4">
                        <h2>3. Dietary Needs</h2>
                        <div class="p-3 bg-dark rounded filter-grid" id="diets-grid"></div>
                    </div>
                    <div class="col-md-12 mb-4">
                        <h2>4. Meal Type</h2>
                        <div class="p-3 bg-dark rounded filter-grid" id="meals-grid"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                 <div class="mb-4">
                    <h2>5. Max Cook Time</h2>
                    <div class="p-3 bg-dark rounded">
                        <input type="range" class="custom-range filter-input" id="time-slider" min="15" max="180" step="5" value="180">
                        <div class="text-center mt-2">Up to <span id="time-value">180</span> mins</div>
                    </div>
                </div>
                <div class="mb-4">
                    <h2>6. Difficulty</h2>
                    <div class="p-3 bg-dark rounded filter-grid" id="difficulty-grid"></div>
                </div>
            </div>
          </div>
        </form>
      </div>

      <!-- RESULTS CONTAINER -->
      <div id="results-container" class="mt-5">
        <h2 id="results-heading" class="mb-4 text-left" style="display:none;">Results</h2>
        <div id="results-cards-container" class="row"></div>
      </div>

    </div>
  </div>

  <!-- Recipe Modal -->
  <div class="modal fade" id="recipeModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modal-recipe-name">Recipe Title</h5>
          <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
        </div>
        <div class="modal-body">
          <img id="modal-recipe-image" src="" class="img-fluid rounded mb-4" alt="Recipe Image">
          <h5>Ingredients</h5>
          <ul id="modal-recipe-ingredients" class="list-unstyled"></ul>
          <hr class="bg-secondary">
          <h5>Procedure</h5>
          <ol id="modal-recipe-procedure"></ol>
        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // --- YOUR PERSONAL RECIPE DATABASE ---
    // Add, edit, or remove recipes here to build your collection.
    const recipeDatabase = [
      {
        id: 'bruschetta',
        name: 'Classic Tomato Bruschetta',
        cuisine: 'Italian',
        diet: ['Vegetarian', 'Vegan'],
        mealType: ['Appetizer', 'Snack'],
        time: 15, difficulty: 'Easy',
        imageUrl: 'https://images.unsplash.com/photo-1579684385127-6ab1b5a2a4b3?auto=format&fit=crop&w=800&q=60',
        ingredients: ['Baguette', 'Tomatoes', 'Garlic', 'Basil', 'Olive Oil', 'Salt', 'Pepper'],
        procedure: ['Toast slices of baguette until golden.', 'Chop tomatoes and mix with minced garlic, fresh basil, and olive oil.', 'Season with salt and pepper.', 'Spoon the tomato mixture onto the toasted bread.'],
        keywords: ['tomato', 'bread', 'italian', 'starter', 'summer']
      },
      {
        id: 'chicken_curry',
        name: 'Simple Chicken Curry',
        cuisine: 'Indian',
        diet: ['Gluten-Free'],
        mealType: ['Dinner', 'Main Course'],
        time: 40, difficulty: 'Intermediate',
        imageUrl: 'https://images.unsplash.com/photo-1631292784024-d6db238a417b?auto=format&fit=crop&w=800&q=60',
        ingredients: ['Chicken', 'Onion', 'Tomato', 'Ginger', 'Garlic', 'Turmeric', 'Coriander Powder', 'Cumin', 'Coconut Milk', 'Oil'],
        procedure: ['Sauté chopped onions, ginger, and garlic.', 'Add spices and cook until fragrant.', 'Add chicken pieces and sear.', 'Pour in chopped tomatoes and coconut milk, then simmer until chicken is cooked through.'],
        keywords: ['curry', 'spicy', 'indian', 'dinner']
      },
      {
        id: 'guacamole',
        name: 'Fresh Guacamole',
        cuisine: 'Mexican',
        diet: ['Vegetarian', 'Vegan', 'Gluten-Free'],
        mealType: ['Appetizer', 'Snack', 'Side Dish'],
        time: 10, difficulty: 'Easy',
        imageUrl: 'https://images.unsplash.com/photo-1598512752271-33f913a53283?auto=format&fit=crop&w=800&q=60',
        ingredients: ['Avocado', 'Lime', 'Onion', 'Cilantro', 'Jalapeño', 'Salt'],
        procedure: ['Mash ripe avocados in a bowl.', 'Mix in finely chopped onion, cilantro, and jalapeño.', 'Squeeze in fresh lime juice and season with salt.'],
        keywords: ['avocado', 'dip', 'mexican', 'party']
      },
      {
        id: 'pancakes',
        name: 'Fluffy American Pancakes',
        cuisine: 'American',
        diet: ['Vegetarian'],
        mealType: ['Breakfast', 'Brunch'],
        time: 25, difficulty: 'Easy',
        imageUrl: 'https://images.unsplash.com/photo-1528207776546-365bb710ee93?auto=format&fit=crop&w=800&q=60',
        ingredients: ['Flour', 'Baking Powder', 'Sugar', 'Salt', 'Egg', 'Milk', 'Butter'],
        procedure: ['Whisk dry ingredients (flour, baking powder, sugar, salt) in a bowl.', 'In another bowl, whisk the egg and milk, then mix in melted butter.', 'Pour wet ingredients into dry and mix until just combined (lumps are okay).', 'Pour batter onto a hot, greased pan and cook until bubbles form, then flip.'],
        keywords: ['pancakes', 'breakfast', 'syrup', 'fluffy']
      },
      {
        id: 'lentil_soup',
        name: 'Hearty Lentil Soup',
        cuisine: 'International',
        diet: ['Vegetarian', 'Vegan', 'Gluten-Free'],
        mealType: ['Dinner', 'Lunch', 'Soup'],
        time: 50, difficulty: 'Easy',
        imageUrl: 'https://images.unsplash.com/photo-1604118318464-267499645224?auto=format&fit=crop&w=800&q=60',
        ingredients: ['Lentils', 'Carrot', 'Celery', 'Onion', 'Garlic', 'Vegetable Broth', 'Cumin', 'Oil', 'Salt', 'Pepper'],
        procedure: ['Sauté chopped onion, carrot, and celery in a large pot.', 'Add garlic and cumin and cook for one more minute.', 'Add rinsed lentils and vegetable broth. Bring to a boil.', 'Reduce heat, cover, and simmer for 30-40 minutes until lentils are tender.'],
        keywords: ['soup', 'lentils', 'healthy', 'winter', 'vegan']
      }
    ];

    // --- SETUP & DYNAMIC FILTERS ---
    const availableCuisines = ['Italian', 'Indian', 'Mexican', 'American', 'International'];
    const availableDiets = ['Vegetarian', 'Vegan', 'Gluten-Free'];
    const availableMeals = ['Breakfast', 'Lunch', 'Dinner', 'Appetizer', 'Dessert', 'Snack', 'Soup', 'Main Course', 'Side Dish'];
    const availableDifficulties = ['Any', 'Easy', 'Intermediate', 'Advanced'];

    function populateFilters(gridId, options, type, name = '') {
        const grid = document.getElementById(gridId);
        grid.innerHTML = options.sort().map((option, index) => {
            const isChecked = (type === 'radio' && option === 'Any') ? 'checked' : '';
            return `<div class="form-check">
                      <input class="form-check-input filter-input" type="${type}" name="${name}" id="${gridId}_${index}" value="${option}" ${isChecked}>
                      <label class="form-check-label" for="${gridId}_${index}">${option}</label>
                    </div>`;
        }).join('');
    }
    populateFilters('cuisines-grid', availableCuisines, 'checkbox');
    populateFilters('diets-grid', availableDiets, 'checkbox');
    populateFilters('meals-grid', availableMeals, 'checkbox');
    populateFilters('difficulty-grid', availableDifficulties, 'radio', 'difficulty');

    // --- SEARCH AND DISPLAY LOGIC ---
    const searchInput = document.getElementById('search-input');
    const timeSlider = document.getElementById('time-slider');
    const timeValue = document.getElementById('time-value');
    const resultsContainer = document.getElementById('results-cards-container');
    const resultsHeading = document.getElementById('results-heading');

    function performSearch() {
        // 1. GATHER ALL FILTER VALUES
        const searchTerm = searchInput.value.trim().toLowerCase().split(/\s+/);
        const selectedTime = parseInt(timeSlider.value, 10);
        const selectedCuisines = Array.from(document.querySelectorAll('#cuisines-grid input:checked')).map(el => el.value);
        const selectedDiets = Array.from(document.querySelectorAll('#diets-grid input:checked')).map(el => el.value);
        const selectedMeals = Array.from(document.querySelectorAll('#meals-grid input:checked')).map(el => el.value);
        const selectedDifficulty = document.querySelector('input[name="difficulty"]:checked').value;
        
        // 2. FILTER THE DATABASE
        const matchedRecipes = recipeDatabase.filter(recipe => {
            // Match text search (name, ingredients, keywords)
            const recipeText = `${recipe.name} ${recipe.ingredients.join(' ')} ${recipe.keywords.join(' ')}`.toLowerCase();
            if (searchTerm[0] !== '' && !searchTerm.every(term => recipeText.includes(term))) return false;
            
            // Match filters
            if (recipe.time > selectedTime) return false;
            if (selectedDifficulty !== 'Any' && recipe.difficulty !== selectedDifficulty) return false;
            if (selectedCuisines.length > 0 && !selectedCuisines.includes(recipe.cuisine)) return false;
            if (selectedDiets.length > 0 && !selectedDiets.every(diet => recipe.diet.includes(diet))) return false;
            if (selectedMeals.length > 0 && !selectedMeals.some(meal => recipe.mealType.includes(meal))) return false;

            return true; // If all checks pass, include the recipe
        });
        displayResults(matchedRecipes);
    }
    
    function displayResults(recipes) {
        resultsContainer.innerHTML = '';
        if (recipes.length === 0) {
            resultsContainer.innerHTML = '<div class="col-12"><p class="lead text-muted">No recipes match your criteria. Try being less restrictive!</p></div>';
        } else {
            recipes.forEach(recipe => {
                const cardHtml = `
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card recipe-card h-100" data-toggle="modal" data-target="#recipeModal" data-recipe-id="${recipe.id}">
                            <img src="${recipe.imageUrl}" class="card-img-top" alt="${recipe.name}">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">${recipe.name}</h5>
                                <p class="card-text text-muted">${recipe.cuisine} · ${recipe.time} mins · ${recipe.difficulty}</p>
                                <a href="#" class="btn btn-primary mt-auto stretched-link">View Recipe</a>
                            </div>
                        </div>
                    </div>
                `;
                resultsContainer.innerHTML += cardHtml;
            });
        }
        resultsHeading.style.display = 'block';
    }

    // --- EVENT LISTENERS ---
    timeSlider.addEventListener('input', () => {
        timeValue.textContent = timeSlider.value;
        performSearch();
    });
    searchInput.addEventListener('input', performSearch);
    document.querySelectorAll('.filter-input').forEach(input => {
        input.addEventListener('change', performSearch);
    });

    // --- MODAL LOGIC ---
    $('#recipeModal').on('show.bs.modal', function (event) {
        const button = $(event.relatedTarget).closest('.recipe-card');
        const recipeId = button.data('recipe-id');
        const recipe = recipeDatabase.find(r => r.id === recipeId);
        
        const modal = $(this);
        modal.find('#modal-recipe-name').text(recipe.name);
        modal.find('#modal-recipe-image').attr('src', recipe.imageUrl);
        
        const ingredientsList = modal.find('#modal-recipe-ingredients');
        ingredientsList.empty().append(recipe.ingredients.map(ing => `<li>- ${ing}</li>`).join(''));
        
        const procedureList = modal.find('#modal-recipe-procedure');
        procedureList.empty().append(recipe.procedure.map(step => `<li>${step}</li>`).join(''));
    });

    // Initial search to show all items on page load
    document.addEventListener('DOMContentLoaded', performSearch);
  </script>
</body>
</html>
